\documentclass{article}
%\VignettePackage{mle2}
%\VignetteIndexEntry{mle2: extended classes and methods for general-purpose maximum likelihood estimation}
%\VignetteDepends{ggplot2}

\usepackage[utf8]{inputenc} % for UTF-8/single quotes from sQuote()
\usepackage{graphicx}
\usepackage{array}
\usepackage{color}
\usepackage[colorlinks=true,urlcolor=blue,bookmarks=true]{hyperref}

\newcommand{\code}[1]{{\tt #1}}
\title{The \code{mle2} package}
\author{Ben Bolker}
\date{\today}

\begin{document}
\maketitle
\tableofcontents


\section{Introduction}

There's not much here yet \ldots but hopefully I will
be adding to this in the future.

\textbf{To do:}
\begin{itemize}
  \item{use \code{predict}, \code{simulate} etc.
    to demonstrate different parametric bootstrap approaches
    to confidence and prediction intervals
    \begin{itemize}
      \item use \code{predict} to get means and standard
        deviations, use delta method?
      \item use \code{vcov}, assuming quadratic profiles,
        with \code{predict(\ldots,newparams=\ldots)}
      \item prediction intervals assuming no parameter uncertainty
        with \code{simulate}
      \item both together \ldots
      \end{itemize}
    }
  \end{itemize}

\section{Example}
  
<<>>=
frogdat <- data.frame(
  size=rep(c(9,12,21,25,37),each=3),
  killed=c(0,2,1,3,4,5,rep(0,4),1,rep(0,4)))
frogdat$initial <- rep(10,nrow(frogdat))
@ 

<<>>=
library(bbmle)
library(ggplot2)
print(gg1 <- ggplot(frogdat,aes(x=size,y=killed))+geom_point()+
      stat_sum(aes(size=factor(..n..)))+
      labs(size="#")+scale_x_continuous(limits=c(0,40)))
m1 <- mle2(killed~dbinom(prob=c*(size/d)^g*exp(1-size/d),
  size=initial),data=frogdat,start=list(c=0.5,d=5,g=1))
pdat <- data.frame(size=1:40,initial=rep(10,40))
pdat1 <- data.frame(pdat,killed=predict(m1,newdata=pdat))
m2 <- mle2(killed~dbinom(prob=c*((size/d)*exp(1-size/d))^g,
  size=initial),data=frogdat,start=list(c=0.5,d=5,g=1))
pdat2 <- data.frame(pdat,killed=predict(m2,newdata=pdat))
gg1 + geom_line(data=pdat1,colour="red")+geom_line(data=pdat2,colour="blue")
@ 

<<>>=
coef(m2)
prof2 <- profile(m2)
@ 

Three different ways to draw the profile:
<<>>=
print(plot(prof2))
@ 

<<fig=TRUE>>=
prof2_df <- as.data.frame(prof2)
library(lattice)
print(xyplot(abs(z)~focal|param,data=prof2_df,
       subset=abs(z)<3,
       type="b",
       xlab="",
       ylab=expression(paste(abs(z),
           " (square root of ",Delta," deviance)")),
       scale=list(x=list(relation="free"))))
@ 

<<fig=TRUE>>=
print(ggplot(subset(prof2_df,abs(z)<3),
       aes(x=focal,y=abs(z)))+geom_line()+
      facet_wrap(~param,scale="free_x"))
@ 

\end{document}
